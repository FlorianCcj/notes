#! /bin/bash
# file: /home/user/hooks/pre-commit
# desc: Hook to check if there is !nocommit in the code
# install:
### configure git to follow core hookpath
## git config --global core.hooksPath '~/.gitconfig/hooks'
##
### make needed files
## mkdir ~/.gitconfig/hooks
## vi ~/.gitconfig/hooks/pre-commit
##
## --> add content of pre-commit <--
##
### be sure it have good rights
## chmod +x ~/.gitconfig/hooks/pre-commit
#
# To prevent debug code from being accidentally committed, simply add a comment near your
# debug code containing the keyword !nocommit and this script will abort the commit.
#
echo "-------------------------------------------"
echo "Commit or not commit that is the question"
echo "-------------------------------------------"
if git commit -v --dry-run | grep '<remove_this>!nocommit' >/dev/null 2>&1
then
  echo "Trying to commit non-committable code."
  echo "Remove the !nocommit string and try again."
  exit 1
else
  exit 0
fi
