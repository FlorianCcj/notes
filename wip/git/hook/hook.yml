- default: .git/hooks
- need exec: chmod +x .git/hooks/…
- ignore some: --no-verify (ignore pre-commit, commit-msg)
- can block:
  local: prepare-commit-msg, pre-rebase, pre-apply-patch, pre-push, pre-auto-gc
  server: pre-receive, update
- code resume:
  0: no block
  1 (or sup): block 
- Utilisation d’un repertoire deporte de hooks:
  config_local_ou_globall: core.hooksPath=<hooks directory>
- hook_dispo:
  commit:
    pre-commit
    prepare-commit-msg
    commit-msg
    post-commit
  patch:
    applypatch-msg
    pre-applypatch
    post-applypatch
  other:
    pre-rebase
    post-checkout
    post-merge
    post-rewrite
    pre-auto-gc
    pre-push
  server:
    pre-receive
    update
    post-update
    post-receive
- workflow exemple:
    commit_quality:
      code_linting: pre-commit
      no_merge_mark: pre-commit
      unit_test: pre-commit
      commit_message_check-convention: prepare_commit_msg or commit_msg
    write_respect_repository_or_branch: update
    build_chain:
      merge_check:
        auto_validation: update
        no_regression_check (ex: coverage): update
        manual_check (code_revue, e2e test): almost like post_receive
      deploy: post_update, post-receive
- server:
  1. Pick a project that needs a custom Git hook.
  2. On the GitLab server, navigate to the project’s repository directory. For an installation from source the path is usually /home/git/repositories/<group>/<project>.git. For Omnibus installs the path is usually /var/opt/gitlab/git-data/repositories/<group>/<project>.git.
  3. Create a new directory in this location called custom_hooks.
  4. Inside the new custom_hooks directory, create a file with a name matching the hook type. For a pre-receive hook the file name should be pre-receive with no extension.
  5. Make the hook file executable and make sure it’s owned by git.
  6. Write the code to make the Git hook function as expected. Hooks can be in any language. Ensure the ‘shebang’ at the top properly reflects the language type. For example, if the script is in Ruby the shebang will probably be #!/usr/bin/env ruby.


to_read:
  - https://pre-commit.com/
  - https://githooks.com/
sources:
  - https://delicious-insights.com/fr/articles/git-hooks/
  - https://docs.gitlab.com/ee/administration/custom_hooks.html
  - angularjs: https://github.com/conventional-changelog-archived-repos/validate-commit-msg